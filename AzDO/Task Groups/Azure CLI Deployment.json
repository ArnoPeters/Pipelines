{
	"tasks": [
		{
			"environment": {},
			"displayName": "[$(taskLabel)] - Azure CLI Deployment",
			"alwaysRun": false,
			"continueOnError": false,
			"condition": "succeeded()",
			"enabled": true,
			"timeoutInMinutes": 0,
			"retryCountOnTaskFailure": 0,
			"inputs": {
				"connectedServiceNameARM": "$(subscription)",
				"scriptType": "bash",
				"scriptLocation": "inlineScript",
				"scriptPath": "",
				"inlineScript": "deploymentName='$(deploymentName)'\ndeploymentMode='$(deploymentMode)'\ndeploymentLevel='$(deploymentLevel)'\noutputVariableNamePrefix='$(outputVariableNamePrefix)'\nparameterOverrides=$'$(parameterOverrides)'\nresourceLocation='$(resourceLocation)'\nresourceGroupName='$(resourceGroupName)'\ntemplateFile='$(templateFile)'\ntemplateParameterFile='$(templateParameterFile)'\nshowExpectedChanges=$(showExpectedChanges)\nmanagementGroupId='$(managementGroupId)'\n\n# Ensure Azure CLI is up to date. May generate warning, can be ignored\necho '##[section]Ensure Azure CLI is up to date'\nexec 3>&2\nexec 2> /dev/null\naz bicep upgrade\nexec 2>&3\n\n# Path sanitizing for Linux\ntemplateFile=\"${templateFile//\\\\//}\"\ntemplateParameterFile=\"${templateParameterFile//\\\\//}\"\n\nif [ \"$deploymentName\" == \"\" ]; then \n  deploymentName=\"$(date +%Y%m%d-%H%M%S)-deployment\"\nfi\n\nparams=\"\"\nif [ \"$parameterOverrides\" != \"\" ]; then \n  params+=$\" --parameters $parameterOverrides\"\nfi\nif [ \"$templateParameterFile\" != \"\" ]; then \n  params+=\" --parameters \\\"$templateParameterFile\\\"\"\nfi\n{\n  if [ $deploymentLevel == 'tenant' ]; then\n    cmd=\"az deployment tenant create --location \\\"$resourceLocation\\\"\"\n    outputsCmd=\"az deployment tenant show\"\n  elif [ $deploymentLevel == 'managementGroup' ]; then\n    cmd=\"az deployment mg create --management-group-id \\\"$managementGroupId\\\" --location \\\"$resourceLocation\\\"\"\n    outputsCmd=\"az deployment mg show --management-group-id \\\"$managementGroupId\\\"\"\n  elif [ $deploymentLevel == 'subscription' ]; then\n    cmd=\"az deployment sub create --location \\\"$resourceLocation\\\"\"\n    outputsCmd=\"az deployment sub show\"\n  elif [ $deploymentLevel == 'resourceGroup' ]; then \n    cmd=\"az deployment group create --mode \\\"$deploymentMode\\\" --resource-group \\\"$resourceGroupName\\\"\"\n    outputsCmd=\"az deployment group show --resource-group \\\"$resourceGroupName\\\"\"\n  fi\n  cmd=\"$cmd --name \\\"$deploymentName\\\" --template-file \\\"$templateFile\\\" $params\"\n  outputsCmd=\"$outputsCmd --name \\\"$deploymentName\\\" --query properties.outputs\"\n  echo \"##[command]$cmd\"\n  if [[ \"${showExpectedChanges,,}\" == \"true\" ]]; then \n    echo '##[section]Template: expected changes'\n    eval \"$cmd --what-if -w\"\n  fi\n  echo '##[section]Template: deployment'\n  eval \"$cmd\"\n  deploymentoutputs=$(eval \"$outputsCmd\")\n} && {\n  echo '##[section]Convert outputs to variables'\n  echo $deploymentoutputs | jq -c '. | to_entries[] | [.key, .value.value, .value.type]' |\n    while IFS=$\"\\n\" read -r c; do\n      keyname=$(echo \"$c\" | jq -r '.[0]')\n      value=$(echo \"$c\" | jq -r '.[1]')\n      type=$(echo \"$c\" | jq -r '.[2]')\n      \n      if [ \"$type\" == \"SecureString\" ]; then\n        echo \"##vso[task.setvariable variable=$outputVariableNamePrefix$keyname;issecret=true]$value\"\n        echo \"Added variable '$outputVariableNamePrefix$keyname' ('$type') with secret value '******'\"\n      elif [ \"$type\" == \"String\" ]; then \n        echo \"##vso[task.setvariable variable=$outputVariableNamePrefix$keyname]$value\"\n        echo \"Added variable '$outputVariableNamePrefix$keyname' ('$type') with value '$value'\"\n      else \n        echo \"##[warning]Skipped output variable conversion: Type '$type' is not supported for '$keyname'\"\n      fi\n      \n    done    \n}",
				"scriptArguments": "",
				"powerShellErrorActionPreference": "stop",
				"addSpnToEnvironment": "false",
				"useGlobalConfig": "false",
				"cwd": "",
				"failOnStandardError": "true",
				"powerShellIgnoreLASTEXITCODE": "false"
			},
			"task": {
				"id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
				"versionSpec": "2.*",
				"definitionType": "task"
			}
		}
	],
	"runsOn": [
		"Agent",
		"DeploymentGroup"
	],
	"revision": 4,
	"createdBy": {
		"displayName": "Arno Peters",
		"id": "6b7b6d39-61fa-4959-bf89-b8d308844343",
		"uniqueName": "arnop@4dotnet.nl"
	},
	"createdOn": "2023-01-12T11:19:25.98Z",
	"modifiedBy": {
		"displayName": "Arno Peters",
		"id": "6b7b6d39-61fa-4959-bf89-b8d308844343",
		"uniqueName": "arnop@4dotnet.nl"
	},
	"modifiedOn": "2023-04-14T12:39:38.757Z",
	"id": "e15fdad8-2f06-44ee-8898-96e5e9f6633e",
	"name": "Azure CLI Deployment",
	"version": {
		"major": 1,
		"minor": 0,
		"patch": 0,
		"isTest": false
	},
	"iconUrl": "https://cdn.vsassets.io/v/M197_20220105.3/_content/icon-meta-task.png",
	"friendlyName": "Azure CLI Deployment",
	"description": "Wrapper around Azure CLI to simplify deploying an ARM or a BICEP template to a resource group. ",
	"category": "Deploy",
	"definitionType": "metaTask",
	"author": "Arno Peters",
	"demands": [],
	"groups": [],
	"inputs": [
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "taskLabel",
			"label": "Task Label",
			"defaultValue": "Azure CLI - Deployment to Azure",
			"type": "string",
			"helpMarkDown": "Display name for the tasks",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {
        "tenant": "Tenant",
        "managementGroup": "Management Group",
        "subscription": "Subscription",
				"resourceGroup": "Resource group"
			},
			"properties": {
				"editableOptions": "False"
			},
			"name": "deploymentLevel",
			"label": "Deployment level",
			"defaultValue": "resourceGroup",
			"required": true,
			"type": "pickList",
			"helpMarkDown": "Deployment level of the template in Azure"
		},
		{
			"aliases": [],
			"options": {
				"incremental": "Incremental",
				"complete": "Complete"
			},
			"properties": {
				"editableOptions": "False"
			},
			"name": "deploymentMode",
			"label": "Deployment Mode",
			"defaultValue": "incremental",
			"required": true,
			"type": "pickList",
			"helpMarkDown": "Deployment mode of the template in Azure",
			"visibleRule": "deploymentLevel = resourceGroup"
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "deploymentName",
			"label": "Deployment Name",
			"defaultValue": "",
			"type": "string",
			"helpMarkDown": "Name of the deployment as it is to be shown in Azure. Leave blank to generate a timestamped name.",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "outputVariableNamePrefix",
			"label": "Output Variable Name Prefix",
			"defaultValue": "",
			"type": "string",
			"helpMarkDown": "Use to distinguish output variable groups if multiple Azure Deployments are used in the same release.",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "parameterOverrides",
			"label": "Parameter overrides",
			"defaultValue": "",
			"required": false,
			"type": "string",
			"helpMarkDown": "key1=value1 key2=value2",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "resourceGroupName",
			"label": "Resource group Name",
			"defaultValue": "$(resourcegroupName)",
			"required": true,
			"type": "string",
			"helpMarkDown": "Name of the resource group to be used in Azure",
			"visibleRule": "deploymentLevel = resourceGroup",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "resourceLocation",
			"label": "Resource location",
			"defaultValue": "",
			"required": true,
			"type": "string",
			"helpMarkDown": "Azure location of the resources",
			"visibleRule": "deploymentLevel != resourceGroup",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {
				"endpointFilterRule": ""
			},
			"name": "subscription",
			"label": "Subscription",
			"defaultValue": "$(subscription)",
			"required": true,
			"type": "connectedService:AzureRM",
			"helpMarkDown": "Select an Azure Resource Manager service connection for the deployment",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "showExpectedChanges",
			"label": "Show expected changes in log output",
			"defaultValue": "False",
			"type": "boolean",
			"helpMarkDown": "Runs a deployment with '--whatif -w' before the actual deployment, to show the expected changes in the log output. This takes some extra time during deployment.",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "templateFile",
			"label": "Template file",
			"defaultValue": "",
			"required": true,
			"type": "filePath",
			"helpMarkDown": "Full path to the template file",
			"groupName": ""
		},
		{
			"aliases": [],
			"options": {},
			"properties": {},
			"name": "templateParameterFile",
			"label": "Template parameter file",
			"defaultValue": "",
			"type": "filePath",
			"helpMarkDown": "Full path to the template parameter file",
			"groupName": ""
		}
	],
	"satisfies": [],
	"sourceDefinitions": [],
	"dataSourceBindings": [],
	"instanceNameFormat": "Task Group: Azure CLI Deployment",
	"preJobExecution": {},
	"execution": {},
	"postJobExecution": {},
	"_buildConfigMapping": {}
}