# Full workflow for creating a pipeline in Azure Devops to create nuget packages from a Github repo, to be published to Azure Devops Artifacts. 
# Features: 
#   - Pre-release on Pull Request
#   - Full release when a Pull Request is accepted and merged
#   - Gitversion is used for automatic semantic versioning
#   - Outputs debug symbols and uses Source Link to provide step-into-package-code during debugging
#
# Best used in combination with the template nuget package (TODO: link)
#
# Azure Devops Marketplace tasks required to use this template: 
# - https://marketplace.visualstudio.com/items?itemName=gittools.gittools)
# - https://marketplace.visualstudio.com/items?itemName=KriefMikael.githubtools

parameters:
- name: azureArtifactsFeed
- name: 'pool'
  type: object
  default: {}
- name: 'buildConfiguration'
  default: "Release"
  type: string
- name: 'rootBranchName'
  type: string
- name: 'runSettingsFile'
  type: string
- name: 'githubEndpoint'
  type: string
- name: 'gitVersionConfigFilePath'
  type: string  
  default: "GitVersion.yml"

stages:
- stage: Build
  displayName: Build and Publish nuget package 
  pool: ${{ parameters.pool }}
  jobs:
  - job: Build
    workspace:
      clean: all
    steps:
    - checkout: self
      displayName: "Checkout repository including submodules"
      submodules: true
      persistCredentials: true

    - template: ..\Steps\ComputeGitVersion.yml
      parameters:
        gitVersionConfigFilePath: ${{ parameters.gitVersionConfigFilePath }}
        rootBranchName: ${{ parameters.rootBranchName }}
   
    - template: ..\Steps\BuildAndTest.yml
      parameters:
        azureArtifactsFeed: ${{ parameters.azureArtifactsFeed }}
        buildConfiguration: ${{ parameters.buildConfiguration }}
        runSettingsFile: ${{ parameters.runSettingsFile }}

    - task: GitHubTag@1
      displayName: Versioning - Tag commit on release'
      inputs:
        githubEndpoint: '${{ parameters.githubEndpoint }}'
        repositoryName: '$(Build.Repository.Name)'
        tag: 'v$(Gitversion.MajorMinorPatch)'
      condition: and(succeeded(), eq('${{ variables['Build.SourceBranch'] }}', '${{ parameters.rootBranchName }}'))
 
    - task: DotNetCoreCLI@2
      displayName: 'NuGet - Push package(s) to [${{ parameters.azureArtifactsFeed }}]'
      inputs:
        command: push
        packagesToPush: '$(System.DefaultWorkingDirectory)/src/**/*.nupkg'
        publishVstsFeed: '${{ parameters.azureArtifactsFeed }}'      
        
    - task: PublishSymbols@2
      displayName: 'Nuget - Publish symbols to artifacts'
      inputs:
        SearchPattern: '**/bin/**/*.pdb'
        IndexSources: false
        SymbolServerType: 'TeamServices'
