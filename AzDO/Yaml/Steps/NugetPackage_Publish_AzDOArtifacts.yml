# Full workflow for creating a pipeline in Azure Devops to create nuget packages from an Azure Devops Git repo, to be published to Azure Devops Artifacts. 
# Features: 
#   - Pre-release on Pull Request
#   - Full release when a Pull Request is accepted and merged
#   - Gitversion is used for automatic semantic versioning
#   - Outputs debug symbols and uses Source Link to provide step-into-package-code during debugging
#
# Best used in combination with the template nuget package (TODO: link)
#
# Prerequisites: 
# The Project Collection Build Server ACCOUNT - not the GROUP needs the following permissions: 
# - Tag
# - Contribute
# These can be set by going to Manage Repositories -> All repositories -> Security
# Azure Devops Marketplace tasks required to use this template. 
# Please check them for further prerequisites and permission settings.
# - https://marketplace.visualstudio.com/items?itemName=gittools.gittools)

parameters:
- name: azureArtifactsFeed
- name: 'packageVersion' #Gitversion.MajorMinorPatch
  type: string
- name: 'rootBranchName'
  type: string
- name: 'pool'
  type: object
  default: {
    vmImage: 'windows-latest'
  }

jobs:
- job: PublishAzDO
  condition: succeeded()
  displayName: Publish package to Azure Devops Artifacts
  pool: ${{ parameters.pool }}
  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: current
      artifact: Packages

  - task: DownloadPipelineArtifact@2
    inputs:
      buildType: current
      artifact: Symbols      
  #- download: current
    #artifact: WebApp
    #patterns: |
    #  **/*.pdb

  #get pipeline artifact
  - checkout: none
    displayName: "Checkout repository including submodules"
    submodules: true
    persistCredentials: true

  - script: |
      git tag -a "v${{ parameters.rootBranchName }}" -m "Release of Nuget package"
      git push origin "v${{ parameters.rootBranchName }}"
    condition: and(succeeded(), eq('${{ variables['Build.SourceBranch'] }}', '${{ parameters.rootBranchName }}'))
    workingDirectory: $(Build.SourcesDirectory)
    displayName: Versioning - Tag commit on release

  - task: DotNetCoreCLI@2
    displayName: 'NuGet - Push package(s) to [${{ parameters.azureArtifactsFeed }}]'
    inputs:
      command: push
      packagesToPush: '../**/*.nupkg'
      publishVstsFeed: '${{ parameters.azureArtifactsFeed }}'

  - task: PublishSymbols@2
    displayName: 'Nuget - Publish symbols to artifacts'
    inputs:
      SearchPattern: '**/*.pdb'
      IndexSources: false
      SymbolServerType: 'TeamServices'
